Ext.define('Ayushman.controller.cdm.PreviousRegimenController', { extend : 'Ayushman.common.baseclasses.controller.BaseController',   config: 	 {		nameSpacePrefix: 'Ayushman.view.cdm.',		//objectsToSave:  null,	 },	 	 createInstanceOfView: function()	{		this.callParent();				//var newHashMap = new Ext.util.MixedCollection();		//this.setObjectsToSave(newHashMap);		/* var instructionHolderControllerInstance1 = Ext.create('Ayushman.controller.cdm.components.InstructionHolderController', 																{ globalControllerInstance : this.getGlobalControllerInstance(), containerTitle: 'Exercise', filterConfig: { property: "category", value: /Exercise/ } });		var instrHolderViewInstance1 = instructionHolderControllerInstance1.getViewInstance();		this.getViewInstance().getComponent('previousRegimenMainContainer').add(instrHolderViewInstance1);						var instructionHolderControllerInstance2 = Ext.create('Ayushman.controller.cdm.components.InstructionHolderController', 																{ globalControllerInstance : this.getGlobalControllerInstance(), containerTitle: 'Nutrition', filterConfig: { property: "category", value: /Nutrition/ } });		var instrHolderViewInstance2 = instructionHolderControllerInstance2.getViewInstance();		this.getViewInstance().getComponent('previousRegimenMainContainer').add(instrHolderViewInstance2);						var instructionHolderControllerInstance3 = Ext.create('Ayushman.controller.cdm.components.InstructionHolderController', 																{ globalControllerInstance : this.getGlobalControllerInstance(), containerTitle: 'Tests', filterConfig: { property: "category", value: /Tests/ } });		var instrHolderViewInstance3 = instructionHolderControllerInstance3.getViewInstance();		this.getViewInstance().getComponent('previousRegimenMainContainer').add(instrHolderViewInstance3); */			},					tap_savePreviousRegimenButton: function()	{					console.log("Tap on save previous regimen button!");		var instructionParametersStore = Ext.getStore('InstructionParametersStore');		var patientsPlanDetailsStore = Ext.getStore('PatientsPlanDetailsStore');		instructionParametersStore.setRemoteFilter(false);				instructionParametersStore.load(function() 		{			var instrComponentsArray = Ext.ComponentQuery.query('singleInstrContainer');			for (var key in instrComponentsArray) 			{				var instructionComponent = instrComponentsArray[key];				var singleInstrContainerController = instructionComponent.getController();				singleInstrContainerController.saveEditedInstructionToStore();			}			instructionParametersStore.setRemoteFilter(true);			instructionParametersStore.sync();			patientsPlanDetailsStore.load();		}, this);	},		destroy: function()	{		// do the cleanup here				this.callParent();				this.setNameSpacePrefix(null);	}	});