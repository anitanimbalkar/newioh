Ext.define('Ayushman.controller.cdm.components.DrillDownContextMenuController', { extend : 'Ayushman.common.baseclasses.controller.BaseController', 	alias: 'widget.drilldowncontextmenucontroller',   requires: ['Ext.util.MixedCollection'],    config: 	{		// as the corresponding view class for this controller is not in the default namespace, we must set the nameSpacePrefix property		nameSpacePrefix: 'Ayushman.view.cdm.components.',		filteredPatientIdsArray: new Array(),		selectedBar: null,				appliedDimensionIdsArray: [],		appliedFilters: [],		drillDownChartInstance: null	},	 	createInstanceOfView: function()	{		this.callParent();				this.getAppliedDimensionIdsArray().push(this.getDrillDownChartInstance().getStartingDimensionId());	},			itemtap_contextMenuList: function(me, index, target, record, e, eOpts)	{		this.setSelectedBar(me.getParent().getSelectedBar());		var drillDownPatientSummaryStore = Ext.getStore('DrillDownRawDataStore');				//drillDownPatientSummaryStore.filterBy(this.filterStoreByGroupName, this);				var filteredPatientsIds = [];				var bucketsWithPatientsLocalStore = Ext.getStore('BucketsWithPatientsLocalStore');		bucketsWithPatientsLocalStore.each(function (record, index, length) {			if((record.get('bucket_name') === this.getSelectedBar().record.get('groupName')))			{				var commaSeparatedPatientIds = record.get('patients_list');				filteredPatientsIds = commaSeparatedPatientIds.split(',');			}		},this);				this.setFilteredPatientIdsArray(filteredPatientsIds);		this.performCalculationAndUpdateGraph(record.get('id'), filteredPatientsIds);						this.getDrillDownChartInstance().setIsChartFresh(false);				var drillDownChartInstance = this.getDrillDownChartInstance();		drillDownChartInstance.getSeries()[0].getXAxis().getTitle().attr.text = record.get('dimension_name');		this.getViewInstance().getParent().hide();				var appliedDimensionIdsArray = this.getAppliedDimensionIdsArray();		var dimensionHierarchyStore = Ext.getStore('DimensionHierarchyLocalStore');		var previouslyAppliedDiemnsionDetails = dimensionHierarchyStore.getById(appliedDimensionIdsArray[appliedDimensionIdsArray.length - 1]);		var groupStatisticsContainerComponent = this.getDrillDownChartInstance().getParent().getParent().getParent();		var filtersContainerComponent = groupStatisticsContainerComponent.getComponent('drillDownFiltersContainerComponentId');		var drillDownFilterComponentControllerInstance = Ext.create('Ayushman.controller.cdm.components.DrillDownFilterComponentController', 																{ globalControllerInstance : this.getGlobalControllerInstance(), dimensionFilterLabel: previouslyAppliedDiemnsionDetails.get('dimension_name'), groupFilterLabel: this.getSelectedBar().record.get('groupName')});		var drillDownFilterComponentViewInstance = drillDownFilterComponentControllerInstance.getViewInstance();		filtersContainerComponent.add(drillDownFilterComponentViewInstance);		var currentlyAppliedFilter = [previouslyAppliedDiemnsionDetails.get('dimension_name'), this.getSelectedBar().record.get('groupName')];		var appliedFiltersArray = this.getAppliedFilters();		appliedFiltersArray.push(currentlyAppliedFilter);		this.setAppliedFilters(appliedFiltersArray);				appliedDimensionIdsArray.push(record.get('id'));		this.setAppliedDimensionIdsArray(appliedDimensionIdsArray);							},			performCalculationAndUpdateGraph: function(dimensionId,filteredPatientsIdsArray)	{			var graphDataProviderControllerInstance = Ext.create('Ayushman.controller.cdm.DrillDownGraphDataProvider',																	{																		dimensionId: dimensionId,																		timeframeId: 1,																		patientIdsArray: filteredPatientsIdsArray																	}																);			graphDataProviderControllerInstance.getData();							var drillDownChartInstance = this.getDrillDownChartInstance();			var dimensionName = Ext.getStore('DimensionHierarchyLocalStore').getById(dimensionId).get('dimension_name');			drillDownChartInstance.getSeries()[0].getXAxis().getTitle().attr.text = dimensionName;				},		filterStoreAccordingToPatientIds: function(record,id)	{		if( this.getFilteredPatientIdsArray().indexOf(record.get('patient_id')) === -1)		{			return false;		}		else 			return true;	},		tap_contextMenuViewPatientsButton: function(me, eOpts)	{			var selectedBar = me.getParent().getSelectedBar();		//var drillDownPatientSummaryStore = Ext.getStore('DrillDownPatientSummaryStore');		var drillDownPatientSummaryStore = Ext.getStore('DrillDownRawDataLocalStore');		drillDownPatientSummaryStore.clearFilter();		var filteredPatientsIds = [];				var bucketsWithPatientsLocalStore = Ext.getStore('BucketsWithPatientsLocalStore');		bucketsWithPatientsLocalStore.each(function (record, index, length) {			if((record.get('bucket_name') === selectedBar.record.get('groupName')))			{				var commaSeparatedPatientIds = record.get('patients_list');				filteredPatientsIds = commaSeparatedPatientIds.split(',');			}		},this);				this.getViewInstance().getParent().hide();				var cdmPatientsListControllerInstance = Ext.create('Ayushman.controller.cdm.CdmPatientsListController',																{ 																	globalControllerInstance: this.getGlobalControllerInstance(),																	filteredPatientIds: filteredPatientsIds																});		var cdmPatientsListViewInstance = cdmPatientsListControllerInstance.getViewInstance();		this.getGlobalControllerInstance().getViewInstance().getComponent('iohFrameViewInnerContainer').add(cdmPatientsListViewInstance);		this.getGlobalControllerInstance().getViewInstance().getComponent('iohFrameViewInnerContainer').setActiveItem(cdmPatientsListViewInstance);				var drillDownFiltersContainerControllerInstance = Ext.create('Ayushman.controller.cdm.DrillDownFiltersContainerController', 																{ globalControllerInstance : this.getGlobalControllerInstance()});		var drillDownFiltersContainerViewInstance = drillDownFiltersContainerControllerInstance.getViewInstance();				cdmPatientsListViewInstance.getComponent('patientsListContainer').add(drillDownFiltersContainerViewInstance);																				        var appliedDimensionIdsArray = this.getAppliedDimensionIdsArray();		var drillDownDimensionStore = Ext.getStore('DimensionHierarchyLocalStore');		var currentlyShownDimensionDetails = drillDownDimensionStore.getById(appliedDimensionIdsArray[appliedDimensionIdsArray.length - 1]);		var currentlyShownDimensionName = currentlyShownDimensionDetails.get('dimension_name');		var currentlySelectedGroupName = selectedBar.record.get('groupName');		var appliedFilters = this.getAppliedFilters();		appliedFilters.push([currentlyShownDimensionName,currentlySelectedGroupName]);				Ext.Array.each(appliedFilters, function(filter, index, appliedFiltersItself)		{			var dimensionName = filter[0];			var groupName = filter[1];			var drillDownFilterComponentControllerInstance = Ext.create('Ayushman.controller.cdm.components.DrillDownFilterComponentController', 																{ globalControllerInstance : this.getGlobalControllerInstance(), dimensionFilterLabel: dimensionName, groupFilterLabel: groupName});			var drillDownFilterComponentViewInstance = drillDownFilterComponentControllerInstance.getViewInstance();			drillDownFiltersContainerViewInstance.add(drillDownFilterComponentViewInstance);				}, this);				appliedFilters.pop();				//this array is required just to show the different background color		var bgColorsClsArray = ['col-sm-12 col-md-8 col-lg-9 equalHeightCol patientListItemBgColor1', 									'col-sm-12 col-md-8 col-lg-9 equalHeightCol patientListItemBgColor2', 									'col-sm-12 col-md-8 col-lg-9 equalHeightCol patientListItemBgColor3', 									'col-sm-12 col-md-8 col-lg-9 equalHeightCol patientListItemBgColor4', 									'col-sm-12 col-md-8 col-lg-9 equalHeightCol patientListItemBgColor5', 									'col-sm-12 col-md-8 col-lg-9 equalHeightCol patientListItemBgColor6' ];		var bgColorsClsArrayIndex = 0;									Ext.Array.each(filteredPatientsIds, function(patientId, index, filteredPatientsIdsItself) {					var filteredPatientListItemComponentController = Ext.create('Ayushman.controller.cdm.components.FilteredPatientListItemComponentController', 																	{ globalControllerInstance : this.getGlobalControllerInstance(), patientId : patientId});			var filteredPatientListItemComponentViewInstance = filteredPatientListItemComponentController.getViewInstance();			cdmPatientsListViewInstance.getComponent('patientsListContainer').add(filteredPatientListItemComponentViewInstance);						var recordsForSinglePatient = drillDownPatientSummaryStore.queryBy(function (record,id) {				if((record.get('patient_id') == patientId))				{					return true;				}				else					return false;			}, this);						var recordsForSinglePatientArray = recordsForSinglePatient.items;			var drillDownDimensionStore = Ext.getStore('DimensionHierarchyLocalStore');						filteredPatientListItemComponentViewInstance.getComponent('patientDetailsContainer').setCls(bgColorsClsArray[bgColorsClsArrayIndex]);						// 			var patientsGeneralDetailsStore = Ext.getStore('PatientsGeneralDetailsStore');			filteredPatientListItemComponentViewInstance.getComponent('patientsImageContainer').getComponent('patientsImage').setSrc( Ayushman.util.Config.getBaseUrlRoot() + patientsGeneralDetailsStore.getById(patientId).get('photo_c'));			filteredPatientListItemComponentViewInstance.getComponent('patientsImageContainer').getComponent('patientsName').setHtml(patientsGeneralDetailsStore.getById(patientId).get('firstname_c') + " " + patientsGeneralDetailsStore.getById(patientId).get('lastname_c'));			//						// following if-else is required because we only have 6 different css classes defined in the css file			var remainder = index % 5;			if(remainder === 0 && index !== 0)			{				bgColorsClsArrayIndex = 0;			}			else			{				bgColorsClsArrayIndex = bgColorsClsArrayIndex + 1;			}						Ext.Array.each(recordsForSinglePatientArray, function(record, index2, recordsForSinglePatientArrayItself) {				var drillDownFilterComponentControllerInstance = Ext.create('Ayushman.controller.cdm.components.DrillDownFilterComponentController', 																	{ globalControllerInstance : this.getGlobalControllerInstance(), dimensionFilterLabel: drillDownDimensionStore.getById(record.get('dimension_id')).get('dimension_name'), groupFilterLabel: record.get('recorded_value')});				var drillDownFilterComponentViewInstance = drillDownFilterComponentControllerInstance.getViewInstance();				filteredPatientListItemComponentViewInstance.getComponent('patientDetailsContainer').add(drillDownFilterComponentViewInstance);			}, this);			}, this);			},			handleContextMenuShowEvent: function(contextMenuPanel, eOpts)	{		var drillDownDimensionStore = Ext.getStore('DimensionHierarchyLocalStore');		drillDownDimensionStore.clearFilter();			if(this.getDrillDownChartInstance().getIsChartFresh() === true)		{			this.setAppliedDimensionIdsArray([this.getDrillDownChartInstance().getStartingDimensionId()]);			this.setAppliedFilters([]);		}		drillDownDimensionStore.filterBy(this.filterDimensionStoreById, this);	},		filterDimensionStoreById: function(record,id)	{		//debugger;		if(((this.getAppliedDimensionIdsArray().indexOf(record.get('id'))) === -1))		{			if(((this.getAppliedDimensionIdsArray().indexOf(record.get('parent_id').toString())) === -1))			{				return true;			}			else 				return false;		}		else 			return false;	},		destroy: function()	{		console.log("Destroy of DrillDownContextMenuController has been called!");		this.callParent();				this.setNameSpacePrefix(null);				console.log("Destroy of DrillDownContextMenuController has been Finished!");	}});