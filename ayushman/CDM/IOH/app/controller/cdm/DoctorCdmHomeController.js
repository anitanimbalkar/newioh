Ext.define('Ayushman.controller.cdm.DoctorCdmHomeController', { extend : 'Ayushman.common.baseclasses.controller.BaseController',     config: 	{		// as the corresponding view class for this controller is not in the default namespace, we must set the nameSpacePrefix property		nameSpacePrefix: 'Ayushman.view.cdm.',	},	 	createInstanceOfView: function()	{		this.callParent();					var drillDownFiltersContainerControllerInstance = Ext.create('Ayushman.controller.cdm.DrillDownFiltersContainerController', 																{ globalControllerInstance : this.getGlobalControllerInstance()});		var drillDownFiltersContainerViewInstance = drillDownFiltersContainerControllerInstance.getViewInstance();		this.getViewInstance().getComponent('groupStatisticsContainer').add(drillDownFiltersContainerViewInstance);						var drillDownGraphControllerInstance = Ext.create('Ayushman.controller.cdm.components.DrillDownGraphController', 																{ globalControllerInstance : this.getGlobalControllerInstance()});		var drillDownGraphViewInstance = drillDownGraphControllerInstance.getViewInstance();		this.getViewInstance().getComponent('groupStatisticsContainer').add(drillDownGraphViewInstance);				// load all stores which are used on DoctorCdmHomeView		var drillDownConfigStore = Ext.getStore('DrillDownConfigurationStore');			drillDownConfigStore.load();					var drillDownPatientSummaryStore = Ext.getStore("DrillDownPatientSummaryStore");		var doctorCredentialsStore = Ext.getStore('UserCredentials');		var doctorsDetails = doctorCredentialsStore.getAt(0);		console.log(doctorsDetails.get('roleSpecificId'));			drillDownPatientSummaryStore.filter([				{property: "doctor_id", value: doctorsDetails.get('roleSpecificId')}			]);				drillDownPatientSummaryStore.load();				var drillDownDimensionStore = Ext.getStore("DrillDownDimensionStore");					drillDownDimensionStore.load();				Ext.getStore("StartingDimensionDDStore").load();				var patientsGeneralDetailsStore = Ext.getStore("PatientsGeneralDetailsStore");		patientsGeneralDetailsStore.filter([				{property: "doctor_id", value: doctorsDetails.get('roleSpecificId')}			]);						patientsGeneralDetailsStore.load();							var createRegimenStore = Ext.getStore('CreateRegimenStore');			createRegimenStore.filter([				{property: "doctor_id", value: doctorsDetails.get('roleSpecificId')}			]);			createRegimenStore.load();					var patientsPlanDetailsStore = Ext.getStore('PatientsPlanDetailsStore');			patientsPlanDetailsStore.filter([				{property: "doctor_id", value: doctorsDetails.get('roleSpecificId')}			]);			patientsPlanDetailsStore.load();				var drillDownRawDataLocalStore = Ext.getStore('DrillDownRawDataLocalStore');				var drillDownRawDataStore = Ext.getStore('DrillDownRawDataStore');		this.copyToLocalStore(drillDownRawDataStore, drillDownRawDataLocalStore);				var dimensionBucketsLocalStore = Ext.getStore('DimensionBucketsLocalStore');		var dimensionBucketsStore = Ext.getStore('DimensionBucketsStore');		this.copyToLocalStore(dimensionBucketsStore, dimensionBucketsLocalStore);				var dimensionHierarchyLocalStore = Ext.getStore('DimensionHierarchyLocalStore');		var dimensionHierarchyStore = Ext.getStore('DimensionHierarchyStore');		this.copyToLocalStore(dimensionHierarchyStore, dimensionHierarchyLocalStore);			},	 	copyToLocalStore: function(fromStore, toStore)	{		if((toStore.getAllCount()) == 0)		{			fromStore.load(function()			{				fromStore.each(function (item, index, length) {					item.setDirty();					toStore.add(item);				},this);				toStore.sync();			},this);		}	},		change_startingDimensionDD: function(me, newValue, oldValue, eOpts)	{			var dimensionId = newValue;				var graphDataProviderControllerInstance = Ext.create('Ayushman.controller.cdm.DrillDownGraphDataProvider',																{																	dimensionId: dimensionId,																	timeframeId: 1																}															);		graphDataProviderControllerInstance.getData();				this.getViewInstance().getComponent('groupStatisticsContainer').down('categorybarchart').setIsChartFresh(true);		this.getViewInstance().getComponent('groupStatisticsContainer').down('categorybarchart').setStartingDimensionId(dimensionId);					var drillDownChartInstance = this.getViewInstance().getComponent('groupStatisticsContainer').down('categorybarchart');			var dimensionName = Ext.getStore('DimensionHierarchyLocalStore').getById(dimensionId).get('dimension_name');			drillDownChartInstance.getSeries()[0].getXAxis().getTitle().attr.text = dimensionName;				this.removeAllExistingFilterComponents();	},		removeAllExistingFilterComponents: function()	{		var filtersContainerController = this.getViewInstance().getComponent('groupStatisticsContainer').getComponent('drillDownFiltersContainerComponentId').getController();				var allFilters = filtersContainerController.getViewInstance().getItems().items;		for(var i = allFilters.length - 1; i >= 0; i--)			{				allFilters[i].destroy();			}	},					destroy: function()	{		console.log("Destroy of DoctorCdmHomeController has been called!");		this.callParent();				this.setNameSpacePrefix(null);		console.log("Destroy of DoctorCdmHomeController has been Finished!");	}});